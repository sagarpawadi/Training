
>> Prerequisites
     > Deployed a CentOS 7 server instance from scratch.
     > Logged into your machine as a non-root user with sudo privileges.

>> Update your CentOS 7 system
     > One of the Linux system administrator's best practices is keeping a system up to date. Install the latest stable packages, then reboot.
            
	    $$ sudo yum install epel-release
           $$ sudo yum update
           $$ sudo reboot
    
     > When the reboot finishes, login with the same sudo user.

>> Install Java
     > Before you can install Jenkins, you need to setup a Java virtual machine on your system. Here, let's install the latest OpenJDK Runtime Environment 1.8.0 using YUM:
            
	    $$ sudo yum install java-1.8.0-openjdk.x86_64
    
     > After the installation, you can confirm it by running the following command:
            
	    $$ java -version
    
     > This command will tell you about the Java runtime environment that you have installed:
         "" openjdk version "1.8.0_91"
            OpenJDK Runtime Environment (build 1.8.0_91-b14)
            OpenJDK 64-Bit Server VM (build 25.91-b14, mixed mode) ""

     > In order to help Java-based applications locate the Java virtual machine properly, you need to set two environment variables: "JAVA_HOME" and "JRE_HOME".
            
	    $$ sudo cp /etc/profile /etc/profile_backup
            $$ echo 'export JAVA_HOME=/usr/lib/jvm/jre-1.8.0-openjdk' | sudo tee -a /etc/profile
            $$ echo 'export JRE_HOME=/usr/lib/jvm/jre' | sudo tee -a /etc/profile
            $$ source /etc/profile
        
     > Finally, you can print them for review:
            
	    $$ echo $JAVA_HOME
            $$ echo $JRE_HOME
        
>> Install Jenkins

     > Use the official YUM repo to install the latest stable version of Jenkins, which is 1.651.2 at the time of writing:
            
	    $$ cd ~ 
            $$ sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
            $$ sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
            $$ yum install jenkins
        
     > Start the Jenkins service and set it to run at boot time:
            
	    $$ sudo systemctl start jenkins.service
            $$ sudo systemctl enable jenkins.service

     > In order to allow visitors access to Jenkins, you need to allow inbound traffic on port 8080:
            
	    $$ sudo firewall-cmd --zone=public --permanent --add-port=8080/tcp
            $$ sudo firewall-cmd --reload

>> Now, test Jenkins by visiting the following address from your web browser:

        URL: http://<Hostaname / IP>:8080
        
     > Password
            
	    $$ less /var/lib/jenkins/secrets/initialAdminPassword
    
     > Fill the required details and get installed recommanded plugins.
    
>> Setup/Install Jenkins SSL Certificate on Linux
    ** CA Signed Certificate
    ** Self-Signed Certificate
    
  ** CA Signed Certificate
        - For Signed Certificate, you'll need to use keytool. 

     > Creates both your private key and certificate signing request
        - The fastest way to create your CSR, is to visit https://www.digicert.com/easy-csr/keytool.htm 

        - Fill in the details, click Generate, then paste your customized keytool CSR command into your terminal.

        - You will be asked to choose a keystore password <step 01 password> to protect your new keystore file. Then press RETURN to use the same password for the certificate's private key. Then you will be asked to type the keystore password once more to create the CSR file.

     > Request your CA Certificate
        - Send CSR file (or the contents of your <your_site_name>.csr file) to your certificate provider and request a PKCS#7 cert which has a .p7b extension and starts with:

    -----BEGIN PKCS #7 SIGNED DATA---

     > Install the SSL Certificate file to your keystore
        - To install the SSL Certificate file to your keystore, type the following command:

            $$ keytool -import -trustcacerts -alias server -file <your_site_name>.p7b -keystore <your_site_name>.jks

        - You should get a confirmation stating that the " Certificate reply was installed in keystore. "

        - Your keystore file (<your_site_name>.jks) is now ready to be used

     > Edit /etc/sysconfig/jenkins
            Option I - Set: 
            -------------------
            JENKINS_PORT="-1"
            JENKINS_HTTPS_PORT="<port>"
            JENKINS_HTTPS_KEYSTORE="/var/lib/jenkins/certificates/<your_site_name>.jks"
            JENKINS_HTTPS_KEYSTORE_PASSWORD="[<step 01 password>]"

            Option II - Set: 
            --------------------
            JENKINS_ARGS=" --httpPort=-1 --httpsPort="<port>" --httpsKeyStore=/var/lib/jenkins/certificates/<your_site_name>.jks --httpsKeyStorePassword=[Cert password from step 1]"

     > Save and Restart
        - Save and restart jenkins and check your logs if all things are good to go...
        
  ** Self-Signed Certificate
        - For Signed Certificate, you'll need to use _ openssl_. 

     > Generate a Private Key

            $$ openssl genrsa -out diagserverCA.key 2048

     > Generate a CSR (Certificate Signing Request)

            $$ openssl req -new -key server.key -out server.csr

     > Generating a Self-Signed Certificate

            $$ openssl req -x509 -new -nodes -key diagserverCA.key -sha256 -days 1024 -out diagserverCA.pem

     > Coverting the pem to pks key file(Jenkins need a pks key file) 
		
            $$ openssl pkcs12 -export -name server-cert -in diagserverCA.pem -inkey diagserverCA.key -out serverkeystore.p12

            $$ keytool -importkeystore -destkeystore server.keystore -srckeystore serverkeystore.p12 -srcstoretype pkcs12 

            $$ keytool -importkeystore -srckeystore server.keystore -destkeystore server.keystore -deststoretype pkcs12

            $$ keytool -importkeystore -srckeystore server.keystore -srcstoretype pkcs12 -destkeystore <your_site_name>.jks -deststoretype JKS


     > Installing the Private Key and Certificate

            $$ mkdir -p /var/lib/jenkins/certificates
            $$ cp server.crt /var/lib/jenkins/certificates
            $$ cp server.key /var/lib/jenkins/certificates

     > Edit /etc/sysconfig/jenkins
            Option I - Set: 
            -------------------
            JENKINS_PORT="-1"
            JENKINS_HTTPS_PORT="<port>"
            JENKINS_HTTPS_KEYSTORE="/var/lib/jenkins/certificates/<your_site_name>.jks"
            JENKINS_HTTPS_KEYSTORE_PASSWORD="[<step 01 password>]"

            Option II - Set: 
            --------------------
	       JENKINS_ARGS=" --httpPort=-1 --httpsPort="<port>" --httpsCertificate=/var/lib/jenkins/certificates/server.crt --httpsPrivateKey=/var/lib/jenkins/certificates/server.key"

     > Save and Restart
        - Save and restart jenkins and check your logs if all things are good to go...

    
